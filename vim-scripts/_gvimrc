"
" Last Change: 03-Jun-2011 08:38:56 .
"
filetype plugin indent on
set autoindent
set autowrite
set hlsearch
set nohidden
set number
set showmatch
set showmode
set esckeys
set ruler
set showcmd
set cin
set incsearch
set smartindent
set smarttab
set foldmethod=marker
set softtabstop=2
set tabstop=2
set cpoptions=aABceFs
set matchpairs=(:),{:},[:],<:>
set noeol
set noscrollbind
set errorformat=%f:%1:%m,\"%f\"\\,\ line\ %1\:\ %m 
set cscopetagorder=1
set modeline
set visualbell
set expandtab
syntax enable
syntax on
colo default

if hasmapto('<C-V>')
	unmap <C-V>
endif

set matchtime=500
"set fo=aw2tq

let g:xml_syntax_folding=1
let BufClose_AltBuffer = '.'
let g:default_color_scheme=g:colors_name
let g:default_fold_method=&foldmethod
let autodate_format = '%d-%3m-%Y %H:%M:%S '

autocmd BufNewFile,BufRead *.pcd set syntax=cpp
au BufRead,BufNewFile *.xy set filetype=xy
autocmd BufNewFile,BufRead *.sip set syntax=cpp
autocmd BufNewFile,BufRead *.pro set syntax=make
autocmd BufNewFile,BufRead *.d set syntax=cpp
autocmd BufNewFile,BufRead *.ui set syntax=xml
autocmd BufNewFile,BufRead *.cw set syntax=xml
autocmd BufNewFile,BufRead *.ts set syntax=xml
autocmd BufRead *.ps1 set syntax=ps1
autocmd BufRead,BufNewFile,BufNew *.ps1 set filetype=ps1
autocmd BufNewFile,BufRead *.ps1 source $VIM/vimfiles/syntax/ps1.vim
autocmd BufNewFile,BufRead *.svg set syntax=xml
autocmd BufWritePre *.py normal m`:%s/\s\+$//e ``
"autocmd  BufNewFile *.{h,hpp} call <SID>insert_gates()
autocmd BufWritePre,BufNewFile *.py set expandtab 
autocmd FileType ps1 syntax on

autocmd BufNew,BufWritePre,BufNewFile,BufRead Makefile set noexpandtab 
autocmd BufNew,BufWritePre,BufNewFile,BufRead Makefile set tabstop=8
autocmd BufNew,BufWritePre,BufNewFile,BufRead Makefile set softtabstop=4
autocmd BufNew,BufWritePre,BufNewFile,BufRead Makefile set shiftwidth=4

autocmd BufRead *.py set expandtab smartindent cinwords=if,elif,else,for,while,try,except,finally,def,class
autocmd BufRead *.py set syntax=python
autocmd BufNewFile,BufRead SConstruct set syntax=python
autocmd BufNewFile,BufRead SConstruct set filetype=python
autocmd BufNewFile,BufRead SConscript set syntax=pmython
autocmd BufNewFile,BufRead SConscript set filetype=python
autocmd BufNew,BufWritePre,BufNewFile,BufRead PYTHON set shiftwidth=4
autocmd BufNew,BufWritePre,BufNewFile,BufRead PYTHON set softtabstop=4

im :<CR> :<CR>

au CursorHold * call ShowBlockName ('quiet')
set history=20
set shortmess=a 
set cmdheight=1
set backspace=2
set clipboard=unnamed
set wildignore=*.o,*.obj,*.bak,*.exe
set mousemodel=popup
set columns=150
set lines=80
set shiftwidth=2
set textwidth=80
set whichwrap=<,>,h,l,[,]
set wrapmargin=2
set laststatus=2
set suffixes=.aux,.bak,.dvi,.gz,.idx,.log,.ps,.swp,.tar,.swo
set title titlestring=%<%f\ [%4l/%4L]\ %P
set statusline=[%n]\ %<%f\ %((%1*%M%*%R%Y)%)\ %(\LINE\ [%4l/%4L]\ COL\ [%02c%03V]%)\ %P
set wildchar=<TAB>
set fileformats=unix,dos
"set backupext=.bak
set nobackup

command! Q q
command! W w
command! X xit


filetype plugin on
set grepprg=grep\ -nH\ $*
filetype indent on
"autocmd BufReadPost,BufNew,BufNewFile,BufRead,BufEnter * call SetSyntaxForCppFiles()
autocmd GUIEnter * call SetSyntaxForCppFiles()

if filereadable (expand ("$VIM/gvimrc-local"))
  source $VIM/gvimrc-local
elseif filereadable (expand("~/.gvimrc-local"))
  source ~/.gvimrc-local
endif

if filereadable (expand ("$GVIMRC_INIT_FILE"))
  source $GVIMRC_INIT_FILE
endif

set noignorecase
